{"ast":null,"code":"import _slicedToArray from \"/home/anush/Documents/Projects/Friend-Finder/friend-finder-front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anush/Documents/Projects/Friend-Finder/friend-finder-front-end/src/Components/Home/Home.js\";\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport store from '../../Controllers/Store/store';\nimport * as actions from '../../Controllers/Actions/Actions';\nimport TopNav from './TopNav';\n\nfunction Home() {\n  const history = useHistory();\n\n  const _useState = useState(\"loading..\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  useEffect(() => {\n    var isLoad = true;\n\n    async function loadData() {\n      document.title = \"Home | Friend Finder\";\n      await axios.post('http://localhost:4000/log-in/check-login', [localStorage.getItem('key')]).then(res => {\n        console.log(res.data);\n\n        if (res.data.message === \"jwt expired\") {\n          localStorage.clear();\n          history.push('/');\n        }\n\n        if (res.data.message === \"jwt must be provided\") {\n          localStorage.clear();\n          history.push('/');\n        }\n\n        if (res.data.message === \"Cannot read property 'toString' of null\") {\n          localStorage.clear();\n          history.push('/');\n        }\n\n        store.dispatch(actions.addUserName(res.data.name));\n        store.dispatch(actions.addAllRecommendedFriends(res.data.userData));\n\n        try {\n          if (isLoad) setName(store.getState().setName[0].name);\n        } catch (err) {\n          console.log(err.message);\n        }\n      }).catch(err => alert(err));\n    }\n\n    loadData();\n    return () => isLoad = false;\n  }, []);\n  const unsubcribe = store.subscribe(() => console.log(store.getState()));\n  const names = useCallback(() => {\n    return name;\n  }, [name]);\n  const friendsAvailable = store.getState().loginApp.details.map(item => {\n    console.log(item);\n  });\n  return React.createElement(\"div\", {\n    className: \"home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(TopNav, {\n    name: names(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"home-main-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"home-people-you-may-know\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"People you may know\"))));\n}\n\nexport default connect(null, {\n  actions\n})(Home);","map":{"version":3,"sources":["/home/anush/Documents/Projects/Friend-Finder/friend-finder-front-end/src/Components/Home/Home.js"],"names":["React","useEffect","useCallback","useState","connect","axios","useHistory","store","actions","TopNav","Home","history","name","setName","isLoad","loadData","document","title","post","localStorage","getItem","then","res","console","log","data","message","clear","push","dispatch","addUserName","addAllRecommendedFriends","userData","getState","err","catch","alert","unsubcribe","subscribe","names","friendsAvailable","loginApp","details","map","item"],"mappings":"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","sourcesContent":["import React,{useEffect,useCallback,useState} from 'react'\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport {useHistory} from 'react-router-dom'\nimport store from '../../Controllers/Store/store'\nimport * as actions from '../../Controllers/Actions/Actions'\nimport TopNav from './TopNav'\n\nfunction Home(){\n    const history = useHistory()\n    const [name,setName] = useState(\"loading..\");\n    useEffect(() => {\n        var isLoad = true;\n        async function loadData (){\n            document.title = \"Home | Friend Finder\";\n            await axios.post('http://localhost:4000/log-in/check-login',[localStorage.getItem('key')])\n            .then(res => {\n                console.log(res.data)\n                if(res.data.message === \"jwt expired\"){\n                    localStorage.clear()\n                    history.push('/');\n                }\n                if(res.data.message === \"jwt must be provided\") {\n                    localStorage.clear()\n                    history.push('/');\n                }\n                if(res.data.message === \"Cannot read property 'toString' of null\"){\n                    localStorage.clear()\n                    history.push('/');\n                }\n                store.dispatch(actions.addUserName(res.data.name))\n                store.dispatch(actions.addAllRecommendedFriends(res.data.userData))\n                try{\n                    if (isLoad) setName(store.getState().setName[0].name)\n                }\n                catch(err){\n                    console.log(err.message);\n                }\n            })\n            .catch( err => alert(err) ) \n        }\n        loadData()\n\n        return( () => isLoad = false )\n    }, [])\n    const unsubcribe = store.subscribe(() => console.log(store.getState()))\n    \n    const names = useCallback(\n        () => { return name },\n    [name],)\n    \n    const friendsAvailable = store.getState().loginApp.details.map(item=>{\n        console.log(item)\n    })\n    return(\n        <div className=\"home\">\n            <TopNav name={names()} />            \n            <div className=\"home-main-content\">\n                <div className=\"home-people-you-may-know\">\n                    <p>People you may know</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(\n    null,\n    { actions }\n)(Home);"]},"metadata":{},"sourceType":"module"}