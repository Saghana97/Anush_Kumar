{"ast":null,"code":"import _slicedToArray from \"/home/anush/Documents/Projects/Friend-Finder/friend-finder-front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anush/Documents/Projects/Friend-Finder/friend-finder-front-end/src/Components/Login/Header.js\";\nimport React, { useState } from 'react';\nimport InputWrapper from './InputWrapper';\nimport Button from '../Button';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport store from '../../Controllers/Store/store';\nimport * as actions from '../../Controllers/Actions/Actions';\n\nfunction Header(props) {\n  const history = useHistory();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const unsubcribe = store.subscribe(() => console.log(store.getState()));\n\n  function saveData(event) {\n    event.preventDefault();\n    store.dispatch(actions.addLoginDetails(email, password));\n    axios.post(`http://localhost:4000/log-in`, store.getState().loginApp).then(res => {\n      if (res.data.status === \"login sucess\") {\n        sessionStorage.setItem(\"key\", res.data.token); // store.dispatch(actions.addUserName(res.data.name))\n\n        history.push(\"/home\");\n      } else {\n        alert(res.data.status);\n      }\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  unsubcribe();\n  return React.createElement(\"div\", {\n    className: \"top-nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"top-nav-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"top-nav-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Friend Finder\")), React.createElement(\"form\", {\n    className: \"top-nav-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(InputWrapper, {\n    inputRef: props.inputRef,\n    method: setEmail,\n    class: \"header-input\",\n    text: \"Email or Phone\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(InputWrapper, {\n    method: setPassword,\n    class: \"header-input\",\n    text: \"Password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Button, {\n    method: saveData,\n    class: \"ff-button\",\n    name: \"Log In\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))));\n}\n\nexport default connect(null, {\n  actions\n})(Header);","map":{"version":3,"sources":["/home/anush/Documents/Projects/Friend-Finder/friend-finder-front-end/src/Components/Login/Header.js"],"names":["React","useState","InputWrapper","Button","axios","useHistory","connect","store","actions","Header","props","history","email","setEmail","password","setPassword","unsubcribe","subscribe","console","log","getState","saveData","event","preventDefault","dispatch","addLoginDetails","post","loginApp","then","res","data","status","sessionStorage","setItem","token","push","alert","catch","err","inputRef"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport InputWrapper from './InputWrapper'\nimport Button from '../Button'\nimport axios from 'axios'\nimport {useHistory} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport store from '../../Controllers/Store/store'\nimport * as actions from '../../Controllers/Actions/Actions'\n\nfunction Header(props){\n    const history = useHistory()\n    const [email , setEmail] = useState('')\n    const [password , setPassword] = useState('')\n\n    const unsubcribe = store.subscribe(() => console.log(store.getState()))\n    function saveData(event){\n        event.preventDefault();\n        store.dispatch(actions.addLoginDetails(email,password))\n\n        axios.post(`http://localhost:4000/log-in`,store.getState().loginApp)\n        .then(res=>{\n            if(res.data.status === \"login sucess\"){\n                sessionStorage.setItem(\"key\",res.data.token)\n                // store.dispatch(actions.addUserName(res.data.name))\n                history.push(\"/home\")\n            }\n            else{\n                alert(res.data.status)\n            }\n        })\n        .catch(err=>{\n            alert(err)\n        })\n    }\n    unsubcribe()\n    return(\n        <div className=\"top-nav\">  \n            <div className=\"top-nav-margin\"> \n                <div className=\"top-nav-left\">\n                    <h1>Friend Finder</h1>\n                </div>\n                <form className=\"top-nav-right\">\n                    <InputWrapper inputRef={props.inputRef} method={setEmail} class=\"header-input\" text=\"Email or Phone\" type=\"text\"/>\n                    <InputWrapper method={setPassword} class=\"header-input\" text=\"Password\" type=\"password\"/>\n                    <Button method={saveData} class=\"ff-button\" name=\"Log In\"/>\n                </form>\n            </div>\n        </div>      \n    );\n}\n\nexport default connect(\n    null,\n    { actions }\n  )(Header);"]},"metadata":{},"sourceType":"module"}