{"ast":null,"code":"import _slicedToArray from \"/home/anush/Documents/Projects/Friend-Finder/friend-finder-front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anush/Documents/Projects/Friend-Finder/friend-finder-front-end/src/Components/Home/Home.js\";\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport store from '../../Controllers/Store/store';\nimport * as actions from '../../Controllers/Actions/Actions';\nimport TopNav from './TopNav';\nimport FriendRecomendation from './FriendRecomendation';\n\nfunction Home() {\n  const history = useHistory();\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  useEffect(() => {\n    document.title = \"Home | Friend Finder\";\n    axios.post('http://localhost:4000/log-in/check-login', [localStorage.getItem('key')]).then(res => {\n      if (res.data.message === \"jwt expired\") {\n        localStorage.clear();\n        history.push('/');\n      }\n\n      if (res.data.message === \"jwt must be provided\") {\n        localStorage.clear();\n        history.push('/');\n      }\n\n      if (res.data.message === \"Cannot read property 'toString' of null\") {\n        localStorage.clear();\n        history.push('/');\n      }\n\n      store.dispatch(actions.addUserName(res.data.name));\n      store.dispatch(actions.addAllRecommendedFriends(res.data.userData));\n\n      try {\n        if (isLoad) setName(store.getState().setName[0].name);\n      } catch (err) {\n        console.log(err.message);\n      }\n    }).catch(err => alert(err));\n    return () => {\n      isLoad = false;\n    };\n  }, []); // const unsubcribe = store.subscribe(() => console.log(store.getState()))\n\n  const names = useCallback(() => {\n    return name;\n  }, [name]);\n\n  function sendFriendRequest(id) {\n    let details = {};\n    details = {\n      requestFrom: localStorage.getItem('key'),\n      requestTo: id\n    };\n    axios.post('http://localhost:4000/send-friend-request', details).then(res => console.log(res.data)).catch(err => alert(err.message));\n  }\n\n  var friendsAvailable;\n\n  try {\n    friendsAvailable = store.getState().setFriends[0].details.map(items => {\n      return React.createElement(FriendRecomendation, {\n        key: items.id,\n        status: items['friendRequests.status'],\n        name: items.userName,\n        mutual: \"-\",\n        method: sendFriendRequest,\n        id: items.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TopNav, {\n    name: names(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"home-main-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"home-people-you-may-know\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"People you may know\"), React.createElement(\"div\", {\n    className: \"people-you-may-know-friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, friendsAvailable))));\n}\n\nexport default connect(null, {\n  actions\n})(Home);","map":{"version":3,"sources":["/home/anush/Documents/Projects/Friend-Finder/friend-finder-front-end/src/Components/Home/Home.js"],"names":["React","useEffect","useCallback","useState","connect","axios","useHistory","store","actions","TopNav","FriendRecomendation","Home","history","name","setName","document","title","post","localStorage","getItem","then","res","data","message","clear","push","dispatch","addUserName","addAllRecommendedFriends","userData","isLoad","getState","err","console","log","catch","alert","names","sendFriendRequest","id","details","requestFrom","requestTo","friendsAvailable","setFriends","map","items","userName"],"mappings":"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","sourcesContent":["import React,{useEffect,useCallback,useState} from 'react'\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport {useHistory} from 'react-router-dom'\nimport store from '../../Controllers/Store/store'\nimport * as actions from '../../Controllers/Actions/Actions'\nimport TopNav from './TopNav'\nimport FriendRecomendation from './FriendRecomendation';\n\nfunction Home(){\n    const history = useHistory()\n    const [name,setName] = useState(\"\");\n    useEffect(() => {\n            document.title = \"Home | Friend Finder\";\n             axios.post('http://localhost:4000/log-in/check-login',[localStorage.getItem('key')])\n            .then(res => {\n                if(res.data.message === \"jwt expired\"){\n                    localStorage.clear()\n                    history.push('/');\n                }\n                if(res.data.message === \"jwt must be provided\") {\n                    localStorage.clear()\n                    history.push('/');\n                }\n                if(res.data.message === \"Cannot read property 'toString' of null\"){\n                    localStorage.clear()\n                    history.push('/');\n                }\n                store.dispatch(actions.addUserName(res.data.name))\n                store.dispatch(actions.addAllRecommendedFriends(res.data.userData))\n                try{\n                    if (isLoad) setName(store.getState().setName[0].name)\n                }\n                catch(err){\n                    console.log(err.message);\n                }\n            })\n            .catch( err => alert(err) ) \n        \n        return( () => {\n            isLoad = false\n        })\n    }, [])\n    // const unsubcribe = store.subscribe(() => console.log(store.getState()))\n    \n    const names = useCallback(\n        () => { return name },\n    [name],)\n    function sendFriendRequest(id){\n        let details = {}\n        details = {\n            requestFrom:localStorage.getItem('key'),\n            requestTo:id\n        }\n        axios.post('http://localhost:4000/send-friend-request',details)\n        .then(res=>console.log(res.data))\n        .catch(err=>alert(err.message))\n    }\n\n    var friendsAvailable;\n    try{\n        friendsAvailable = store.getState().setFriends[0].details.map(items=>{\n            return <FriendRecomendation key={items.id} status={items['friendRequests.status']} name={items.userName} mutual=\"-\" method={sendFriendRequest} id={items.id}/>\n        })\n    }\n    catch(err){\n        console.log(err.message)\n    }\n    return(\n        <div className=\"home\">\n            <TopNav name={names()} />            \n            <div className=\"home-main-content\">\n                <div className=\"home-people-you-may-know\">\n                    <p>People you may know</p>\n                    <div className=\"people-you-may-know-friends\">\n                        {friendsAvailable}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(\n    null,\n    { actions }\n)(Home);"]},"metadata":{},"sourceType":"module"}