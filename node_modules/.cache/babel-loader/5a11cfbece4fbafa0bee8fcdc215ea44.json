{"ast":null,"code":"import _slicedToArray from \"/home/anush/Documents/Projects/React Js/splitwise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/Dashboard.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport DashboardHeader from './DashboardHeader';\nimport DashboardIntro from './DashboardIntro';\nimport DashboardOutro from './DashboardOutro';\nimport ExpenseTracker from './Expence/ExpenseTracker';\nimport ModalExpense from './ModalExpense';\nimport SettleExpense from './SettleExpense';\n\nfunction Dashboard() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        loginAuth = _useState2[0],\n        setLoginAuth = _useState2[1];\n\n  React.useEffect(() => {\n    document.title = \"Dashboard · Splitwise\";\n    const token = localStorage.getItem(\"login-key\"); // console.log(token)\n\n    axios.post(`http://localhost:4000/check-login`, {\n      \"data\": token\n    }).then(res => {\n      //console.log(res);\n      console.log(res.data);\n      setLoginAuth(res.data[0]);\n    });\n\n    if (loginAuth == \"jwt expired\") {\n      localStorage.clear();\n      history.push(\"/loading\");\n      setTimeout(() => {\n        history.push(\"/\");\n      }, 1700);\n    }\n\n    if (loginAuth == \"jwt must be provided\") {\n      localStorage.clear();\n      history.push(\"/loading\");\n      setTimeout(() => {\n        history.push(\"/\");\n      }, 1700);\n    }\n  }, []);\n\n  function CustomRender(props) {\n    const dashCurrent = props.viewType.map(item => {\n      if (item.visibility) {\n        if (item.dash == \"dash-intro\") {\n          return React.createElement(DashboardIntro, {\n            key: item.dash,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          });\n        }\n\n        if (item.dash == \"dash-outro\") {\n          return React.createElement(DashboardOutro, {\n            key: item.dash,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          });\n        }\n\n        if (item.dash == \"dash-exp\") {\n          return React.createElement(ExpenseTracker, {\n            key: item.dash,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          });\n        }\n      }\n    });\n    return dashCurrent;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"dashboard-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(DashboardHeader, {\n    method: handleView,\n    viewType: view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(CustomRender, {\n    viewType: view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(ModalExpense, {\n    method: handleView,\n    viewModal: view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(SettleExpense, {\n    method: handleView,\n    viewModal: view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/Dashboard.js"],"names":["React","useState","useHistory","axios","DashboardHeader","DashboardIntro","DashboardOutro","ExpenseTracker","ModalExpense","SettleExpense","Dashboard","loginAuth","setLoginAuth","useEffect","document","title","token","localStorage","getItem","post","then","res","console","log","data","clear","history","push","setTimeout","CustomRender","props","dashCurrent","viewType","map","item","visibility","dash","handleView","view"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport DashboardHeader from './DashboardHeader'\nimport DashboardIntro from './DashboardIntro'\nimport DashboardOutro from './DashboardOutro'\nimport ExpenseTracker from './Expence/ExpenseTracker'\nimport ModalExpense from './ModalExpense'\nimport SettleExpense from './SettleExpense'\n\n\nfunction Dashboard(){\n    \n\n    const[loginAuth,setLoginAuth] = useState(\"\");\n\n    React.useEffect(()=>{\n        document.title = \"Dashboard · Splitwise\"\n        const token = localStorage.getItem(\"login-key\");\n        // console.log(token)\n        axios.post(`http://localhost:4000/check-login`,{\"data\":token})\n          .then(res => {\n            //console.log(res);\n            console.log(res.data);\n            setLoginAuth(res.data[0])\n        }); \n        if(loginAuth == \"jwt expired\") {\n            localStorage.clear()\n            history.push(\"/loading\")\n            setTimeout(()=>{\n                history.push(\"/\");\n            },1700)\n        }\n        if(loginAuth == \"jwt must be provided\") {\n            localStorage.clear()\n            history.push(\"/loading\")\n            setTimeout(()=>{\n                history.push(\"/\");\n            },1700)\n        }\n    },[])\n    \n    function CustomRender(props){\n        const dashCurrent = props.viewType.map(item => {\n            if (item.visibility) {\n                if(item.dash == \"dash-intro\"){\n                    return <DashboardIntro key={item.dash} />\n                }\n                if(item.dash == \"dash-outro\"){\n                    return  <DashboardOutro key={item.dash}/>\n                }\n                if(item.dash == \"dash-exp\"){\n                    return <ExpenseTracker key={item.dash}/>\n                }\n            }\n        })\n        return dashCurrent\n    }\n    return (\n        <>\n            <div className=\"dashboard-content\">\n                <DashboardHeader method={handleView} viewType={view}/>\n                <CustomRender viewType={view}/> \n            </div>\n            <ModalExpense method={handleView} viewModal={view}/>\n            <SettleExpense method={handleView} viewModal={view}/>\n        </>\n    )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}