{"ast":null,"code":"import _slicedToArray from \"/home/anush/Documents/Projects/React Js/splitwise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/Dashboard.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport DashboardHeader from './DashboardHeader';\nimport DashboardIntro from './DashboardIntro';\nimport DashboardOutro from './DashboardOutro';\nimport ExpenseTracker from './Expence/ExpenseTracker';\nimport ModalExpense from './ModalExpense';\nimport SettleExpense from './SettleExpense';\n\nfunction Dashboard() {\n  const history = useHistory();\n\n  const _useState = useState([{\n    dash: \"dash-intro\",\n    visibility: true\n  }, {\n    dash: \"dash-outro\",\n    visibility: false\n  }, {\n    dash: \"dash-exp\",\n    visibility: false\n  }, {\n    modal: false\n  }, {\n    settle: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        view = _useState2[0],\n        setView = _useState2[1];\n\n  function handleView(newView) {\n    setView(newView);\n  }\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loginAuth = _useState4[0],\n        setLoginAuth = _useState4[1];\n\n  React.useEffect(() => {\n    const token = localStorage.getItem(\"login-key\"); // console.log(token)\n\n    axios.post(`http://localhost:4000/check-login`, {\n      \"data\": token\n    }).then(res => {\n      //console.log(res);\n      // console.log(res.data);\n      setLoginAuth(res.data);\n    });\n\n    if (loginAuth === \"jwt expired\") {\n      // alert(\"sorry\")\n      localStorage.clear();\n      history.push(\"/loading\");\n      setTimeout(() => {\n        history.push(\"/\");\n      });\n    }\n\n    if (loginAuth === \"jwt must be provided\") {\n      // alert(\"sorry\")\n      localStorage.clear();\n      history.push(\"/loading\");\n      setTimeout(() => {\n        history.push(\"/\");\n      });\n    }\n  }, [loginAuth]);\n\n  function CustomRender(props) {\n    const dashCurrent = props.viewType.map(item => {\n      if (item.visibility) {\n        if (item.dash == \"dash-intro\") {\n          return React.createElement(DashboardIntro, {\n            key: item.dash,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          });\n        }\n\n        if (item.dash == \"dash-outro\") {\n          return React.createElement(DashboardOutro, {\n            key: item.dash,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          });\n        }\n\n        if (item.dash == \"dash-exp\") {\n          return React.createElement(ExpenseTracker, {\n            key: item.dash,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          });\n        }\n      }\n    });\n    return dashCurrent;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"dashboard-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(DashboardHeader, {\n    method: handleView,\n    viewType: view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(CustomRender, {\n    viewType: view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(ModalExpense, {\n    method: handleView,\n    viewModal: view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(SettleExpense, {\n    method: handleView,\n    viewModal: view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/Dashboard.js"],"names":["React","useState","useHistory","axios","DashboardHeader","DashboardIntro","DashboardOutro","ExpenseTracker","ModalExpense","SettleExpense","Dashboard","history","dash","visibility","modal","settle","view","setView","handleView","newView","loginAuth","setLoginAuth","useEffect","token","localStorage","getItem","post","then","res","data","clear","push","setTimeout","CustomRender","props","dashCurrent","viewType","map","item"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport DashboardHeader from './DashboardHeader'\nimport DashboardIntro from './DashboardIntro'\nimport DashboardOutro from './DashboardOutro'\nimport ExpenseTracker from './Expence/ExpenseTracker'\nimport ModalExpense from './ModalExpense'\nimport SettleExpense from './SettleExpense'\n\n\nfunction Dashboard(){\n    const history = useHistory();\n\n    const [view, setView] = useState([\n        {\n            dash:\"dash-intro\",\n            visibility: true\n        },\n        {\n            dash:\"dash-outro\",\n            visibility: false\n        },\n        {\n            dash:\"dash-exp\",\n            visibility: false\n        },\n        {\n            modal:false\n        },\n        {\n            settle:false\n        }\n    ])\n    function handleView(newView){\n        setView(newView)\n    }\n\n    const[loginAuth,setLoginAuth] = useState(\"\");\n    React.useEffect(()=>{\n        const token = localStorage.getItem(\"login-key\");\n        // console.log(token)\n        axios.post(`http://localhost:4000/check-login`,{\"data\":token})\n          .then(res => {\n            //console.log(res);\n            // console.log(res.data);\n            setLoginAuth(res.data)\n        }); \n        if(loginAuth === \"jwt expired\") {\n            // alert(\"sorry\")\n            localStorage.clear()\n            history.push(\"/loading\")\n            setTimeout(()=>{\n                history.push(\"/\");\n            })\n        }\n        if(loginAuth === \"jwt must be provided\") {\n            // alert(\"sorry\")\n            localStorage.clear()\n            history.push(\"/loading\")\n            setTimeout(()=>{\n                history.push(\"/\");\n            },)\n        }\n    },[loginAuth])\n    \n    function CustomRender(props){\n        const dashCurrent = props.viewType.map(item => {\n            if (item.visibility) {\n                if(item.dash == \"dash-intro\"){\n                    return <DashboardIntro key={item.dash} />\n                }\n                if(item.dash == \"dash-outro\"){\n                    return  <DashboardOutro key={item.dash}/>\n                }\n                if(item.dash == \"dash-exp\"){\n                    return <ExpenseTracker key={item.dash}/>\n                }\n            }\n        })\n        return dashCurrent\n    }\n    return (\n        <>\n            <div className=\"dashboard-content\">\n                <DashboardHeader method={handleView} viewType={view}/>\n                <CustomRender viewType={view}/> \n            </div>\n            <ModalExpense method={handleView} viewModal={view}/>\n            <SettleExpense method={handleView} viewModal={view}/>\n        </>\n    )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}