{"ast":null,"code":"import _slicedToArray from \"/home/anush/Documents/Projects/React Js/splitwise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anush/Documents/Projects/React Js/splitwise/src/Components/Login/LoginForm.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport Button from '../Button';\nimport InputWrap from './InputWrap';\nimport LoginExtras from './LoginExtras';\n\nfunction LoginForm() {\n  const _useState = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    loginEmail: \"\",\n    loginPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const history = useHistory();\n\n  function handleloginEmail(event) {\n    setUsers(prevUsers => {\n      prevUsers.loginEmail = event.target.value;\n      return prevUsers;\n    });\n  }\n\n  function handleloginPassword(event) {\n    setUsers(prevUsers => {\n      prevUsers.loginPassword = event.target.value;\n      return prevUsers;\n    });\n  }\n\n  function loginAuthentication(event) {\n    event.preventDefault();\n    const userCredentials = [];\n    userCredentials.push(users.loginEmail);\n    userCredentials.push(users.loginPassword);\n    axios.post(`http://localhost:4000/post-call-login`, userCredentials).then(res => {\n      //console.log(res);\n      //console.log(res.data);\n      alert(res.data[0]);\n      localStorage.setItem(\"login-key\", res.data[1]);\n\n      if (res.data[0] == \"Email & Password does not match or account does not exist.\") {\n        alert(res.data[0]);\n      }\n\n      if (res.data[0] == \"Username & Password does not match.\") {\n        alert(res.data[0]);\n      }\n\n      if (res.data[0] == \"Password incorrect.\") {\n        alert(res.data[0]);\n      }\n\n      if (res.data[0] == \"login success\") {\n        history.push(\"/loading\");\n        setTimeout(() => {\n          history.push(\"/Dashboard\");\n        }, 2000);\n      }\n    });\n  }\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"login-h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Welcome to splitwise\"), React.createElement(InputWrap, {\n    class: \"login-input\",\n    name: \"Email address\",\n    method: handleloginEmail,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(InputWrap, {\n    class: \"login-input\",\n    name: \"Password\",\n    method: handleloginPassword,\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Button, {\n    class: \"log-btn\",\n    name: \"Log in\",\n    onclickmeth: loginAuthentication,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(LoginExtras, {\n    class: \"small-p\",\n    text: \"Forgot your password? \",\n    btnClass: \"forgot-btn\",\n    btnName: \"click here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(LoginExtras, {\n    class: \"small-p\",\n    text: \"Or login with \",\n    btnClass: \"google-btn \",\n    btnName: \"Google\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/anush/Documents/Projects/React Js/splitwise/src/Components/Login/LoginForm.js"],"names":["React","useState","useHistory","axios","Button","InputWrap","LoginExtras","LoginForm","name","email","password","loginEmail","loginPassword","users","setUsers","history","handleloginEmail","event","prevUsers","target","value","handleloginPassword","loginAuthentication","preventDefault","userCredentials","push","post","then","res","alert","data","localStorage","setItem","setTimeout"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,SAAT,GAAoB;AAAA,oBACUN,QAAQ,CAAC;AAC/BO,IAAAA,IAAI,EAAC,EAD0B;AAE/BC,IAAAA,KAAK,EAAC,EAFyB;AAG/BC,IAAAA,QAAQ,EAAC,EAHsB;AAK/BC,IAAAA,UAAU,EAAC,EALoB;AAM/BC,IAAAA,aAAa,EAAC;AANiB,GAAD,CADlB;AAAA;AAAA,QACTC,KADS;AAAA,QACFC,QADE;;AAShB,QAAMC,OAAO,GAAGb,UAAU,EAA1B;;AAEA,WAASc,gBAAT,CAA0BC,KAA1B,EAAgC;AAC5BH,IAAAA,QAAQ,CAACI,SAAS,IAAE;AAClBA,MAAAA,SAAS,CAACP,UAAV,GAAuBM,KAAK,CAACE,MAAN,CAAaC,KAApC;AACA,aAAOF,SAAP;AACD,KAHO,CAAR;AAID;;AACD,WAASG,mBAAT,CAA6BJ,KAA7B,EAAmC;AACjCH,IAAAA,QAAQ,CAACI,SAAS,IAAE;AAClBA,MAAAA,SAAS,CAACN,aAAV,GAA0BK,KAAK,CAACE,MAAN,CAAaC,KAAvC;AACA,aAAOF,SAAP;AACD,KAHO,CAAR;AAID;;AACD,WAASI,mBAAT,CAA6BL,KAA7B,EAAmC;AACjCA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMC,eAAe,GAAG,EAAxB;AACAA,IAAAA,eAAe,CAACC,IAAhB,CAAqBZ,KAAK,CAACF,UAA3B;AACAa,IAAAA,eAAe,CAACC,IAAhB,CAAqBZ,KAAK,CAACD,aAA3B;AACCT,IAAAA,KAAK,CAACuB,IAAN,CAAY,uCAAZ,EAAmDF,eAAnD,EACGG,IADH,CACQC,GAAG,IAAI;AACX;AACA;AACDC,MAAAA,KAAK,CAACD,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAD,CAAL;AACCC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCJ,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAjC;;AACA,UAAGF,GAAG,CAACE,IAAJ,CAAS,CAAT,KAAe,4DAAlB,EAA+E;AAC9ED,QAAAA,KAAK,CAACD,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAD,CAAL;AACA;;AACD,UAAGF,GAAG,CAACE,IAAJ,CAAS,CAAT,KAAe,qCAAlB,EAAwD;AACvDD,QAAAA,KAAK,CAACD,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAD,CAAL;AACA;;AACD,UAAGF,GAAG,CAACE,IAAJ,CAAS,CAAT,KAAe,qBAAlB,EAAwC;AACvCD,QAAAA,KAAK,CAACD,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAD,CAAL;AACA;;AACD,UAAGF,GAAG,CAACE,IAAJ,CAAS,CAAT,KAAe,eAAlB,EAAkC;AACjCf,QAAAA,OAAO,CAACU,IAAR,CAAa,UAAb;AACAQ,QAAAA,UAAU,CAAC,MAAI;AAAClB,UAAAA,OAAO,CAACU,IAAR,CAAa,YAAb;AAA2B,SAAjC,EAAkC,IAAlC,CAAV;AACA;AACJ,KAnBD;AAqBF;;AACH,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,aAAjB;AAA+B,IAAA,IAAI,EAAC,eAApC;AAAoD,IAAA,MAAM,EAAET,gBAA5D;AAA8E,IAAA,IAAI,EAAC,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,aAAjB;AAA+B,IAAA,IAAI,EAAC,UAApC;AAA+C,IAAA,MAAM,EAAEK,mBAAvD;AAA4E,IAAA,IAAI,EAAC,UAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAsC,IAAA,WAAW,EAAEC,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,SAAnB;AAA6B,IAAA,IAAI,EAAC,wBAAlC;AAA2D,IAAA,QAAQ,EAAC,YAApE;AAAiF,IAAA,OAAO,EAAC,YAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,SAAnB;AAA6B,IAAA,IAAI,EAAC,gBAAlC;AAAmD,IAAA,QAAQ,EAAC,aAA5D;AAA0E,IAAA,OAAO,EAAC,QAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAWH;;AAED,eAAef,SAAf","sourcesContent":["import React,{useState} from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\nimport Button from '../Button'\nimport InputWrap from './InputWrap'\nimport LoginExtras from './LoginExtras'\n\nfunction LoginForm(){\n    const [users, setUsers] = useState({\n        name:\"\",\n        email:\"\",\n        password:\"\",\n    \n        loginEmail:\"\",\n        loginPassword:\"\",\n      });\n    const history = useHistory();\n\n    function handleloginEmail(event){\n        setUsers(prevUsers=>{\n          prevUsers.loginEmail = event.target.value;\n          return prevUsers\n        })\n      }\n      function handleloginPassword(event){\n        setUsers(prevUsers=>{\n          prevUsers.loginPassword = event.target.value;\n          return prevUsers\n        })\n      }\n      function loginAuthentication(event){\n        event.preventDefault();\n        const userCredentials = [];\n        userCredentials.push(users.loginEmail);\n        userCredentials.push(users.loginPassword)\n         axios.post(`http://localhost:4000/post-call-login`,userCredentials)\n           .then(res => {\n             //console.log(res);\n             //console.log(res.data);\n            alert(res.data[0])\n             localStorage.setItem(\"login-key\",res.data[1])\n             if(res.data[0] == \"Email & Password does not match or account does not exist.\"){\n              alert(res.data[0])\n             }\n             if(res.data[0] == \"Username & Password does not match.\"){\n              alert(res.data[0])\n             }\n             if(res.data[0] == \"Password incorrect.\"){\n              alert(res.data[0])\n             }\n             if(res.data[0] == \"login success\"){\n              history.push(\"/loading\")\n              setTimeout(()=>{history.push(\"/Dashboard\")},2000)\n             }\n         })\n        \n      }\n    return(\n        <form>\n            <h4 className=\"login-h4\">Welcome to splitwise</h4>\n            <InputWrap class=\"login-input\" name=\"Email address\" method={handleloginEmail} type=\"text\"/>\n            <InputWrap class=\"login-input\" name=\"Password\" method={handleloginPassword} type=\"password\"/>\n            <Button class=\"log-btn\" name=\"Log in\" onclickmeth={loginAuthentication}/>\n            <LoginExtras class=\"small-p\" text=\"Forgot your password? \" btnClass=\"forgot-btn\" btnName=\"click here\"/>\n            <hr/>\n            <LoginExtras class=\"small-p\" text=\"Or login with \" btnClass=\"google-btn \" btnName=\"Google\"/>\n        </form>\n    )\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}