{"ast":null,"code":"import _slicedToArray from \"/home/anush/Documents/Projects/React Js/splitwise/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DashboardHeader from './DashboardHeader';\nimport DashboardIntro from './DashboardIntro';\nimport DashboardOutro from './DashboardOutro';\nimport ExpenseTracker from './Expence/ExpenseTracker';\nimport ModalExpense from './ModalExpense';\nimport SettleExpense from './SettleExpense';\nimport MenuNavActivity from '../Menu-Navigation/MenuNavActivity';\nimport Promotions from '../Promotions/Promotions';\n\nfunction Dashboard(props) {\n  const _useState = useState([{\n    dash: \"dash-intro\",\n    visibility: true\n  }, {\n    dash: \"dash-outro\",\n    visibility: false\n  }, {\n    dash: \"dash-exp\",\n    visibility: false\n  }, {\n    modal: false\n  }, {\n    settle: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        view = _useState2[0],\n        setView = _useState2[1];\n\n  function handleDashVisibility() {\n    const currentViewModal = view.map(item => {\n      if (item.visibility === true) {\n        item.visibility = !item.visibility;\n      }\n\n      if (item.dash === \"dash-exp\") {\n        item.visibility = !item.visibility;\n      }\n\n      item.modal = false;\n      return item;\n    });\n    handleView(currentViewModal);\n  }\n\n  function handleView(newView) {\n    setView(newView);\n  } //\n\n\n  const _useState3 = useState([{\n    name: \"\",\n    description: \"\",\n    amount: \"\",\n    time: \"\"\n  }]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        expenses = _useState4[0],\n        setExpenses = _useState4[1];\n\n  const _useState5 = useState([{\n    name: \"\",\n    description: \"\",\n    amount: \"\",\n    time: \"\"\n  }]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        expensesYouOwe = _useState6[0],\n        setExpensesYouOwe = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        name = _useState8[0],\n        setName = _useState8[1];\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"login-key\");\n    axios.post(`http://localhost:4000/expense-view`, {\n      \"data\": token\n    }).then(res => {\n      console.log(res.data[0]);\n      setExpenses(prevExpenses => {\n        prevExpenses = res.data[0];\n        return prevExpenses;\n      });\n      setExpensesYouOwe(prevExpensesYouOwe => {\n        prevExpensesYouOwe = res.data[1];\n        return prevExpensesYouOwe;\n      });\n\n      if (res.data.length != 0) {\n        handleDashVisibility(); // alert(\"0\")\n      }\n    });\n    return () => {\n      setName(\"anush\");\n    };\n  }, [name]);\n\n  function updateAmount() {\n    var amount = 0;\n    expenses.map(item => {\n      parseFloat(amount += parseFloat(item.amount / 2));\n    });\n    return amount;\n  }\n\n  function updateAmountYouOwe() {\n    var amount = 0;\n    expensesYouOwe.map(item => {\n      parseFloat(amount += parseFloat(item.amount / 2));\n    });\n    return amount;\n  }\n\n  function CustomRender(props) {\n    const dashCurrent = props.viewType.map(item => {\n      if (item.visibility) {\n        if (item.dash == \"dash-intro\") {\n          return React.createElement(DashboardIntro, {\n            key: item.dash,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          });\n        }\n\n        if (item.dash == \"dash-outro\") {\n          return React.createElement(DashboardOutro, {\n            key: item.dash,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          });\n        }\n\n        if (item.dash == \"dash-exp\") {\n          return React.createElement(ExpenseTracker, {\n            key: item.dash,\n            method: updateAmount,\n            expenses: expenses,\n            expensesYouOwe: expensesYouOwe,\n            method2: updateAmountYouOwe,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          });\n        }\n      }\n    });\n    return dashCurrent;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"main-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(MenuNavActivity, {\n    expenses: expenses,\n    expensesYouOwe: expensesYouOwe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"dashboard-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(DashboardHeader, {\n    method: handleView,\n    viewType: view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(CustomRender, {\n    viewType: view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(Promotions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(ModalExpense, {\n    method: handleView,\n    viewModal: view,\n    user: props.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(SettleExpense, {\n    method: handleView,\n    viewModal: view,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/anush/Documents/Projects/React Js/splitwise/src/Components/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","axios","DashboardHeader","DashboardIntro","DashboardOutro","ExpenseTracker","ModalExpense","SettleExpense","MenuNavActivity","Promotions","Dashboard","props","dash","visibility","modal","settle","view","setView","handleDashVisibility","currentViewModal","map","item","handleView","newView","name","description","amount","time","expenses","setExpenses","expensesYouOwe","setExpensesYouOwe","setName","token","localStorage","getItem","post","then","res","console","log","data","prevExpenses","prevExpensesYouOwe","length","updateAmount","parseFloat","updateAmountYouOwe","CustomRender","dashCurrent","viewType","user"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react'\nimport axios from 'axios'\nimport DashboardHeader from './DashboardHeader'\nimport DashboardIntro from './DashboardIntro'\nimport DashboardOutro from './DashboardOutro'\nimport ExpenseTracker from './Expence/ExpenseTracker'\nimport ModalExpense from './ModalExpense'\nimport SettleExpense from './SettleExpense'\nimport MenuNavActivity from '../Menu-Navigation/MenuNavActivity'\nimport Promotions from '../Promotions/Promotions'\n\n\nfunction Dashboard(props){\n\n    const [view, setView] = useState([\n        {\n            dash:\"dash-intro\",\n            visibility: true\n        },\n        {\n            dash:\"dash-outro\",\n            visibility: false\n        },\n        {\n            dash:\"dash-exp\",\n            visibility: false\n        },\n        {\n            modal:false\n        },\n        {\n            settle:false\n        }\n    ])\n    function handleDashVisibility(){\n        const currentViewModal = view.map((item) =>{\n            if(item.visibility === true){\n                item.visibility = !item.visibility\n            }\n            if(item.dash === \"dash-exp\"){\n                item.visibility = !item.visibility\n            }\n            item.modal = false\n            return item\n        })\n        handleView(currentViewModal)\n    }\n    function handleView(newView){\n        setView(newView)\n    }\n    //\n    const[expenses,setExpenses] = useState([{\n        name:\"\",\n        description: \"\",\n        amount: \"\",\n        time:\"\"\n    }]);\n    const[expensesYouOwe,setExpensesYouOwe] = useState([{\n        name:\"\",\n        description: \"\",\n        amount: \"\",\n        time:\"\"\n    }]);\n    const[name,setName] = useState(\"\")\n    useEffect(() => {\n        const token = localStorage.getItem(\"login-key\");\n\n        axios.post(`http://localhost:4000/expense-view`,{\"data\":token})\n        .then(res=>{\n            console.log(res.data[0])\n            setExpenses(prevExpenses=>{\n                prevExpenses= res.data[0]\n                return prevExpenses\n            })\n            setExpensesYouOwe(prevExpensesYouOwe=>{\n                prevExpensesYouOwe = res.data[1]\n                return prevExpensesYouOwe\n            })\n            if(res.data.length != 0){\n                handleDashVisibility()\n                // alert(\"0\")\n            }\n        })\n        return () => {\n            setName(\"anush\")\n        };\n    },[name]);\n    function updateAmount(){\n        var amount=0;\n        expenses.map(item=>{\n            parseFloat(amount+=parseFloat(item.amount/2))\n        })\n        return amount\n    }\n    function updateAmountYouOwe(){\n        var amount=0;\n        expensesYouOwe.map(item=>{\n            parseFloat(amount+=parseFloat(item.amount/2))\n        })\n        return amount\n    }\n\n    function CustomRender(props){\n        const dashCurrent = props.viewType.map(item => {\n            if (item.visibility) {\n                if(item.dash == \"dash-intro\"){\n                    return <DashboardIntro key={item.dash} />\n                }\n                if(item.dash == \"dash-outro\"){\n                    return  <DashboardOutro key={item.dash}/>\n                }\n                if(item.dash == \"dash-exp\"){\n                    return <ExpenseTracker key={item.dash} method={updateAmount} expenses={expenses} expensesYouOwe={expensesYouOwe} method2={updateAmountYouOwe}/>\n                }\n            }\n        })\n        return dashCurrent\n    }\n    return (\n        <>\n            <div className=\"main-content\">\n                <MenuNavActivity expenses={expenses} expensesYouOwe={expensesYouOwe}/>\n                <div className=\"dashboard-content\">\n                    <DashboardHeader method={handleView} viewType={view}/>\n                    <CustomRender viewType={view}/> \n                    {/* <ExpenseTracker method={updateAmount} expenses={expenses}/> */}\n                </div>\n                <Promotions/>\n                <ModalExpense method={handleView} viewModal={view} user={props.user}/>\n                <SettleExpense method={handleView} viewModal={view}/>\n            </div>\n        </>\n    )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}